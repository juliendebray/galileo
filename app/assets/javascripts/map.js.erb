// Variables gloablly needed to retrieve google maps objects
var handler;
var markers = {};
var ibOpened = false;
var ib  = {};


function mapPanToContainInfoBox(infobox, topOffset, bottomOffset, leftOffset, rightOffset) {
  var map = handler.getMap();
  var mapZoom = map.getZoom();
  var mapBounds = map.getBounds();
  var infoBoxCoordinates = latlngToPoint(map, infobox.getPosition(), mapZoom);
  var mapNECoordinates = latlngToPoint(map, mapBounds.getNorthEast(), mapZoom);
  var mapSWCoordinates = latlngToPoint(map, mapBounds.getSouthWest(), mapZoom);

  var topDistance = infoBoxCoordinates.y - $('.infoBox').height() - mapNECoordinates.y - topOffset;
  var bottomDistance = infoBoxCoordinates.y - mapSWCoordinates.y - bottomOffset;
  var leftDistance = infoBoxCoordinates.x - ($('.infoBox').width())/2 - mapNECoordinates.x - leftOffset*$('#map').width();
  var rightDistance = infoBoxCoordinates.x + ($('.infoBox').width())/2 - mapSWCoordinates.x - rightOffset*$('#map').width();

  if (topDistance  < 0) {
    if (leftDistance < 0) {
      map.panBy(leftDistance, topDistance);
    } else if (rightDistance > 0) {
      map.panBy(rightDistance, topDistance);
    } else {
      map.panBy(0, topDistance);
    }
  } else if (bottomDistance > 0) {
      if (leftDistance < 0) {
        map.panBy(leftDistance, bottomDistance);
      } else if (rightDistance > 0) {
        map.panBy(rightDistance, bottomDistance);
      } else {
      map.panBy(0, bottomDistance);
    }
  } else if (leftDistance < 0) {
    map.panBy(leftDistance, 0);
  } else if (rightDistance > 0) {
    map.panBy(rightDistance, 0);
  } else {
    return;
  }
}

function latlngToPoint(map, latlng, z) {
  var normalizedPoint = map.getProjection().fromLatLngToPoint(latlng); // returns x,y normalized to 0~255
  var scale = Math.pow(2, z);
  var pixelCoordinate = new google.maps.Point(normalizedPoint.x * scale, normalizedPoint.y * scale);
  return pixelCoordinate;
}

function checkIfInfoWindowIsOpened() {
  if (handler.currentInfowindow() == null) {
    return false;
  } else if (handler.currentInfowindow().getMap() == null) {
    return false;
  } else {
    return true;
  }
}

function setCarouselOnInfowindow(data) {
  if (markers.length == 0) {
    return;
  }
  var map = handler.getMap();
var data = data;
  for (var i = 0; i < markers.length; i++) {
    markers[i].serviceObject.set('id',i);
    google.maps.event.clearListeners(markers[i].serviceObject);
    google.maps.event.addListener(markers[i].serviceObject, 'click', function(event) {
      if (ibOpened) {
        ib.close();
        ibOpened = false;
      } else {
        var boxText = document.createElement("div");
        boxText.setAttribute("class", 'infobox-container');

        boxText.innerHTML = data[this.id].infobox;

        var infoboxOptions = {
          content: boxText
          ,disableAutoPan: true
          ,pixelOffset: new google.maps.Size(-140, -40)
          ,alignBottom: true
          ,zIndex: null
          ,disableAutoPan: true
          ,closeBoxURL: ""
          ,boxStyle: {
            width: "280px"
            ,opacity: 1
          }
          ,infoBoxClearance: new google.maps.Size(1, 1)
          ,isHidden: false
          ,pane: "floatPane"
          ,enableEventPropagation: false
        };

        ib = new InfoBox(infoboxOptions);
        ib.open(map, this);
        ibOpened = true;
        google.maps.event.addListener(ib, 'domready', function(){
          $(".owl-carousel").owlCarousel({
            items: 1,
            singleItem: true,
            navigation : true,
            navigationText : [
              "<i class='fa fa-angle-left'></i>",
              "<i class='fa fa-angle-right'></i>"
            ],
            pagination : false,
            slideSpeed : 300,
            paginationSpeed : 400,
            rewindSpeed: 1,
            slideSpeed: 1
            // lazyLoad : true, // TODO: set img class and data-src and css accordingly (if needed)
          });
          mapPanToContainInfoBox(ib, 56.70033307669564, -17.994751360066402, -0.947300072, 0.9909910672);
          // Wide screen (width: 930 / heigth: 500)
          // mapPanToContainInfoBox(ib, 56.70033307669564, -17.994751360066402, -896.6936455111118, 924.3063544888882);
          // Small screen (width: 632 / heigth: 500))
          // mapPanToContainInfoBox(ib, 56.70033307669564, -17.994751360066402, -598.6936455111136, 626.3063544888864);
          // Very Small (width: 370 / heigth: 500)
          // mapPanToContainInfoBox(ib, 54.70033307669564, -17.994751360066402, -338.6936455111136, 364.3063544888864);

          initalizeLinkWithRemoteTrue();
        });
      }
    });
  }
}

function initalizeLinkWithRemoteTrue() {
  $('.infobox-content > a').on('click', function(e){
    e.preventDefault();
    $.rails.handleRemote($(this));
  });
}

function makeExperiencesSortable() {
  // Dragable list for trip experiences order
  var panelList = $('#draggablePanelList');
  panelList.sortable({
  // Only make the .panel-heading child elements support dragging.
  // Omit this to make the entire <li>...</li> draggable.
    handle: '.panel-heading',
    update: function() {
      $('.panel', panelList).each(function(index, elem) {
        var $listItem = $(elem),
          newIndex = $listItem.index(); // Persist the new indices.
      });
    }
  });
  addBoxShadowEffectWhileDraggingBox();
}

function addBoxShadowEffectWhileDraggingBox() {
  // Change the border-shadow while dragging
  $('.panel-heading').on('mousedown', function(){
    $(this).parent().css('box-shadow', '2px 2px 1px 1px rgba(0, 0, 0, 0.5)');
    $(document).on('mouseup', function(){
      $('.panel').css('box-shadow', '1px 1px 1px 1px rgba(0, 0, 0, 0.1)');
    });
  });
}

function setExperiencesOrderByClickingOnSave() {
  $('#set-orders').on("mousedown", function() {
    var order = {};
    for (var i = 0; i < $('.panel.panel-info').length; i++){
      order[i+1] =  $('.panel.panel-info')[i].id;
    }
    $('#order').attr('value', JSON.stringify(order));
  });
}

function buildMapForGuestUser(mapOptions, trip_id) {
  handler = Gmaps.build('Google', { builders: { Marker: InfoBoxBuilder} });
  requestingMarkers = false;
  handler.buildMap({provider: mapOptions, internal: {id: 'map'}}, function(){
    var map = handler.getMap();
    requestingMarkers = true;
    var url = "/trips/" + trip_id + "/trip_experiences/trip_markers";
    setMarkersAccordingToApi(url, function(r) {
      handler.fitMapToBounds();
    });
    showModalByClikingOnMap(map, '#myModalGuest', '#trip_comment_address');
    // Reset modal process
    $('#myModalGuest').on('hidden.bs.modal', function(){
        $('#trip_comment_address').val('');
        $('#trip_comment_description').val('');
      });
  });
}

function buildMapForUser(mapOptions, trip_id) {
  handler = Gmaps.build('Google', { builders: { Marker: InfoBoxBuilder} });
  var requestingMarkers = false;
  handler.buildMap({ provider: mapOptions, internal: { id: 'map' } }, function(){
    var map = handler.getMap();
    // SET MARKERS ON MAP LOADING AND KEEP LISTENING
    setMarkersAndKeepListening(map, trip_id);
    // SET MARKERS DEPENDING ON USER CHOICE
    $('#user-choices').on("change", function() {
      if ($('#user-experiences').prop('checked')){
        // Set map with booked experiences;
        google.maps.event.clearListeners(map, 'dragend');
        google.maps.event.clearListeners(map, 'zoom_changed');
        requestingMarkers = true;
        var url = "/trips/"+trip_id+"/trip_experiences/trip_markers";
        setMarkersAccordingToApi(url, function(r) {
          requestingMarkers = r;
        });
      } else if ($('#guests-comments').prop('checked')) {
        // Set map with trip_comments;
        google.maps.event.clearListeners(map, 'dragend');
        google.maps.event.clearListeners(map, 'zoom_changed');
        requestingMarkers = true;
        var url = "/trips/"+trip_id+"/trip_comments/comments_markers";
        setMarkersAccordingToApi(url, function(r) {
          requestingMarkers = r;
        });
      } else if ($('#all-experiences').prop('checked')) {
        setMarkersAndKeepListening(map, trip_id);
      }
    });
    showModalByClikingOnMap(map, '#myModal', '#experience_address');
    // Reset modal process
    $('#myModal').on('hidden.bs.modal', function(){
        $('#experience_name').val('');
        $('#experience_address').val('');
        $('#experience_description').val('');
      });
  });
};

function showModalByClikingOnMap(map, modal_id, address_field_id) {
  // Show modal with address field prefilled
  var updateTimeout = null;
  google.maps.event.addListener(map, "click", function(e) {
    if (ibOpened) {
      ib.close();
      ibOpened = false;
    } else {
      updateTimeout = setTimeout(function() {
        var geocoder = new google.maps.Geocoder();
        geocoder.geocode({'latLng': e.latLng}, function(results, status){
          $(modal_id).modal('show');
          $(address_field_id).val(results[1].formatted_address);
          });
      }, 200);
    }
  });
  google.maps.event.addListener(map, 'dblclick', function(event) {
      clearTimeout(updateTimeout);
  });
  // Display google maps pac-container
  $(address_field_id).on("click", function(e) {
    $('.pac-container').zIndex(100000);
  });
}

function setMarkersAndKeepListening(map, trip_id) {
  // SET MARKERS ON MAP LOADING AND KEEP LISTENING
  // Set markers on loading
  requestingMarkers = true;
  setMarkersAccordingToBounds(map, trip_id, function(r) {
   requestingMarkers = r;
  });
  // Set markers when drag ends
  google.maps.event.addListener(map, 'dragend', function() {
    google.maps.event.addListener(map, 'idle', function() {
     if (requestingMarkers || ibOpened) {
     return;
     }
     requestingMarkers = true;
     setMarkersAccordingToBounds(map, trip_id, function(r) {
       requestingMarkers = r;
     });
   });
  });
  // Set markers when zoom changes
  google.maps.event.addListener(map, 'zoom_changed', function() {
   google.maps.event.addListener(map, 'idle', function() {
     if (requestingMarkers || ibOpened) {
       return;
     }
     requestingMarkers = true;
     setMarkersAccordingToBounds(map, trip_id, function(r) {
       requestingMarkers = r;
     });
   });
  });
}

function setMarkersAccordingToBounds(map, trip_id, callback) {
  var url = buildUrlWithBounds(map, trip_id);
  setMarkersAccordingToApi(url, callback);
}

function setMarkersAccordingToApi(url, callback) {
  $.get(url, function(data) {
    handler.removeMarkers(markers);
    markers = handler.addMarkers(data);
    setCarouselOnInfowindow(data);
    handler.bounds.extendWith(markers);
    callback(false);
  });
}

function buildUrlWithBounds(map, trip_id) {
  var bounds = map.getBounds();
  var northEastLat = bounds.getNorthEast().lat();
  var northEastLng = bounds.getNorthEast().lng();
  var southWestLat = bounds.getSouthWest().lat();
  var southWestLng = bounds.getSouthWest().lng();
  return "/trips/"+trip_id+"/trip_experiences/markers?NELA=" + northEastLat + "&NELO=" + northEastLng + "&SWLA=" + southWestLat + "&SWLO=" + southWestLng ;
}