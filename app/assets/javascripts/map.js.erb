var handler; // Need to retrieve the google maps object

function buildMap(mapOptions, trip_id) {
  handler = Gmaps.build('Google');
  var requestingMarkers = false;
  var infoWindowOpened = false;
  var previousMarkers = {};

  handler.buildMap({ provider: mapOptions, internal: { id: 'map' } }, function(){
    var map = handler.getMap();

   // SET MARKERS ON MAP LOADING AND KEEP LISTENING
   // Set markers on loading
    var url = buildUrlWithBounds(map, trip_id);
    $.get(url, function(data) {
      handler.removeMarkers(previousMarkers);
      previousMarkers = handler.addMarkers(data);
      handler.bounds.extendWith(previousMarkers);
      requestingMarkers = false;
    });
    // Set markers when drag ends
    google.maps.event.addListener(map, 'dragend', function() {
      if (requestingMarkers) {
      return;
      }
      requestingMarkers = true;
      var url = buildUrlWithBounds(map, trip_id);
      $.get(url, function(data) {
        handler.removeMarkers(previousMarkers);
        previousMarkers = handler.addMarkers(data);
        handler.bounds.extendWith(previousMarkers);
        requestingMarkers = false;
      });
    });
    // Set markers when zoom changes
    google.maps.event.addListener(map, 'zoom_changed', function() {
      if (requestingMarkers) {
        return;
      }
      requestingMarkers = true;
      var url = buildUrlWithBounds(map, trip_id);
      $.get(url, function(data) {
        handler.removeMarkers(previousMarkers);
        previousMarkers = handler.addMarkers(data);
        handler.bounds.extendWith(previousMarkers);
        requestingMarkers = false;
      });
    });

    // SET MARKERS DEPENDING ON USER CHOICE
    $('#user-choices').on("click", function() {
      if ($('#user-experiences').prop('checked')){
        // Set map with booked experiences;
        google.maps.event.clearListeners(map, 'dragend');
        google.maps.event.clearListeners(map, 'zoom_changed');
        var url = "/trips/"+trip_id+"/trip_experiences/trip_markers";
        $.get(url, function(data) {
          handler.removeMarkers(previousMarkers);
          previousMarkers = handler.addMarkers(data);
          handler.bounds.extendWith(previousMarkers);
        });
      } else if ($('#checkbox-guests-comments').prop('checked')) {
        // Set map with trip_comments;
        google.maps.event.clearListeners(map, 'dragend');
        google.maps.event.clearListeners(map, 'zoom_changed');
        var url = "/trips/"+trip_id+"/trip_experiences/trip_markers";
        $.get(url, function(data) {
          handler.removeMarkers(previousMarkers);
          previousMarkers = handler.addMarkers(data);
          handler.bounds.extendWith(previousMarkers);
        });

      } else if ($('#all-experiences').prop('checked')) {
        // Set markers on loading
        var url = buildUrlWithBounds(map, trip_id);
        $.get(url, function(data) {
          handler.removeMarkers(previousMarkers);
          previousMarkers = handler.addMarkers(data);
          handler.bounds.extendWith(previousMarkers);
          requestingMarkers = false;
        });
        // Set markers when drag ends
        google.maps.event.addListener(map, 'dragend', function() {
          if (requestingMarkers) {
          return;
          }
          requestingMarkers = true;
          var url = buildUrlWithBounds(map, trip_id);
          $.get(url, function(data) {
            handler.removeMarkers(previousMarkers);
            previousMarkers = handler.addMarkers(data);
            handler.bounds.extendWith(previousMarkers);
            requestingMarkers = false;
          });
        });

        // Set markers when zoom changes
        google.maps.event.addListener(map, 'zoom_changed', function() {
          if (requestingMarkers) {
            return;
          }
          requestingMarkers = true;
          var url = buildUrlWithBounds(map, trip_id);
          $.get(url, function(data) {
            handler.removeMarkers(previousMarkers);
            previousMarkers = handler.addMarkers(data);
            handler.bounds.extendWith(previousMarkers);
            requestingMarkers = false;
          });
        });
      }
    });
  });
}

function  buildUrlWithBounds(map, trip_id) {
  var bounds = map.getBounds();
  var northEastLat = bounds.getNorthEast().lat();
  var northEastLng = bounds.getNorthEast().lng();
  var southWestLat = bounds.getSouthWest().lat();
  var southWestLng = bounds.getSouthWest().lng();
  return "/trips/"+trip_id+"/trip_experiences/markers?NELA=" + northEastLat + "&NELO=" + northEastLng + "&SWLA=" + southWestLat + "&SWLO=" + southWestLng ;
}